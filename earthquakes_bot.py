from telebot import TeleBot, types
from dotenv import load_dotenv, find_dotenv
from os import environ
from earthquakes_info import find_last_earthquakes, track_new_earthquakes, get_coords
from time import sleep


load_dotenv(find_dotenv())
telegram_bot_token = environ["TELEGRAM_API"]
yandex_api_key = environ["YANDEX_API"]
bot = TeleBot(telegram_bot_token)
longitude, latitude = 0, 0
radius = 3000
users_settings = {}


def send_eq_data(message, earthquake: dict):
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏–∏
    chat_id = message.chat.id
    markup = types.InlineKeyboardMarkup(row_width=1)
    map_button = types.InlineKeyboardButton(text="üó∫ –ö–∞—Ä—Ç–∞ —Å–æ–±—ã—Ç–∏—è", url = earthquake["map"])
    region_button = types.InlineKeyboardButton(text="üß≠ –†–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", url = earthquake["region-info"])
    markup.add(map_button, region_button)
    bot.send_message(chat_id, f"""
üìù {earthquake["title"]}

üö© –ú–µ—Å—Ç–æ —Å–æ–±—ã—Ç–∏—è -> {earthquake["place"]}
üïò –í—Ä–µ–º—è —Å–æ–±—ã—Ç–∏—è –ø–æ UTC -> {earthquake["date"]}
‚ÜîÔ∏è –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ->  {earthquake["distance"]} –∫–º

üåê‚ÜîÔ∏è –ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è —à–∏—Ä–æ—Ç–∞ -> {earthquake["latitude"]}
üåê‚Üï –ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è –¥–æ–ª–≥–æ—Ç–∞ -> {earthquake["longitude"]}
                """, reply_markup=markup)


def get_users_coords(message):
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ earthquakes_info.py
    global users_settings
    chat_id = message.chat.id
    place = message.text
    users_settings[chat_id]["longitude"], users_settings[chat_id]["latitude"] = get_coords(place, yandex_api_key)
    users_settings[chat_id]["place"] = place
    if not users_settings[chat_id]["longitude"] or not users_settings[chat_id]["latitude"]:
        bot.send_message(chat_id, "–ú–µ—Å—Ç–æ –Ω–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ!\n–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (0, 0)")
        users_settings[chat_id]["longitude"], users_settings[chat_id]["latitude"] = 0, 0
        return None
    bot.send_message(chat_id, f"–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!\n{users_settings[chat_id]["latitude"]} (—à–∏—Ä–æ—Ç–∞), {users_settings[chat_id]["longitude"]} (–¥–æ–ª–≥–æ—Ç–∞)")


def get_search_radius(message):
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–¥–∏—É—Å–∞
    global users_settings
    chat_id = message.chat.id
    argument = message.text
    if len(argument.split()) > 1:
        bot.send_message(chat_id, "–í—ã –¥–æ–ª–∂–Ω—ã —É–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ —á–∏—Å–ª–æ!")
        return None
    elif not argument.isdigit():
        bot.send_message(chat_id, "–í—ã –¥–æ–ª–∂–Ω—ã —É–∫–∞–∑–∞—Ç—å —á–∏—Å–ª–æ!")
        return None
    elif int(argument) > 20001 or int(argument) < 1:
        bot.send_message(chat_id, "–†–∞–¥–∏—É—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 20.001 –∫–º!")
        return None
    users_settings[chat_id]["radius"] = int(argument)
    bot.send_message(chat_id, f"–†–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ {int(argument)} –∫–º.")


def get_last_earthquakes(message):
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ N –¥–Ω–µ–π
    global users_settings
    chat_id = message.chat.id
    sending_delay = 1
    argument = message.text
    if len(argument.split()) > 1:
        bot.send_message(chat_id, "–í—ã –¥–æ–ª–∂–Ω—ã —É–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ —á–∏—Å–ª–æ!")
        return None
    elif not argument.isdigit():
        bot.send_message(chat_id, "–í—ã –¥–æ–ª–∂–Ω—ã —É–∫–∞–∑–∞—Ç—å —á–∏—Å–ª–æ!")
        return None
    elif int(argument) < 1 or int(argument) > 27:
        bot.send_message(chat_id, "–í—ã –¥–æ–ª–∂–Ω—ã —É–∫–∞–∑–∞—Ç—å —á–∏—Å–ª–æ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 27!")
        return None

    earthquakes = find_last_earthquakes(users_settings[chat_id]["latitude"], users_settings[chat_id]["longitude"], int(argument), users_settings[chat_id]["radius"])

    if not len(earthquakes):
        bot.send_message(chat_id, "–ù–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏–π –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        return None

    bot.send_message(chat_id, "–ù–∏–∂–µ –ø—Ä–∏–≤–µ–¥–µ–Ω —Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏–π:")
    for earthquake in earthquakes:
        send_eq_data(message, earthquake)
        sleep(sending_delay)


# –î–∞–ª–µ–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∏–¥—É—Ç —Ñ—É–Ω–∫—Ü–∏–∏-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏. –≠—Ç–æ –∑–Ω–∞—á–∏—Ç —á—Ç–æ –¥–∞–ª—å—à–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –±—É–¥—É—Ç "—Ç—Ä–∏–≥–≥–µ—Ä—ã" –Ω–∞ –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–∑—ã–≤–∞—é—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–µ –≤—ã—à–µ.
# –ù–æ —Ç–∞–∫–∂–µ –±—É–¥—É—Ç –∏ —Ñ—É–Ω–∫—Ü–∏–∏-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –≤—ã–∑—ã–≤–∞—é—Ç –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π, –∞ –¥–µ–ª–∞—é—Ç –≤—Å—ë "—Å–∞–º–∏"


@bot.message_handler(commands=["start", "help"])
def start(message):
    # –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∞—è –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞—é—â–∞—è –∫–Ω–æ–ø–∫–∏
    global users_settings
    chat_id = message.chat.id
    users_settings[chat_id] = {"tracking": False,
    "latitude": 0,
    "longitude": 0,
    "radius": 3000,
    "place": "–û—Å—Ç—Ä–æ–≤ –ù–æ–ª—å"
    }
    markup = types.ReplyKeyboardMarkup()
    setplace_button = types.KeyboardButton("üìç –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ") 
    setradius_button = types.KeyboardButton("‚≠ï –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞")
    fetch_button = types.KeyboardButton("üåé –ù–∞–π—Ç–∏ –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏—è")
    info_button = types.KeyboardButton("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ")
    settings_button = types.KeyboardButton("‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è")
    track_button = types.KeyboardButton("üîé –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏—è")
    untrack_button = types.KeyboardButton("‚ùå –ù–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏—è")
    markup.add(setplace_button, setradius_button, fetch_button, track_button, untrack_button, info_button, settings_button)
    bot.send_message(chat_id, """
    –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–º–∞–Ω–¥:

/setplace -> —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–≤–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –û—Å—Ç—Ä–æ–≤ –ù–æ–ª—å)
/setradius -> —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞–¥–∏—É—Å –≤ –∫–∏–ª–æ–º–µ—Ç—Ä–∞—Ö –ø–æ–∏—Å–∫–∞ –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏–π (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 3000)
/fetch -> –ø–æ–ª—É—á–∏—Ç—å –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è
/track -> –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –Ω–æ–≤—ã–µ –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏—è
/untrack -> –ø–µ—Ä–µ—Å—Ç–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –Ω–æ–≤—ã–µ –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏—è
/settings -> –≤—ã–≤–æ–¥ —Ç–µ–∫—É—é—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
/info -> –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ
/help –ª–∏–±–æ /start -> –≤—ã–≤–æ–¥ –¥–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    """, reply_markup=markup)


@bot.message_handler(commands=["info"])
def info(message):
    # –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ
    chat_id = message.chat.id
    markup = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton(text="üì© –°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π", url = "https://github.com/Nick536363/Earthquake_Bot")
    markup.add(button)
    bot.send_message(chat_id, """
    –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ:

–í–µ–¥—É—â–∏–π –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç: Nick536363
    """, reply_markup=markup)


@bot.message_handler(commands=["settings"])
def settings(message):
    #  –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    global users_settings
    chat_id = message.chat.id
    bot.send_message(chat_id, f"""
    –¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:

–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è -> {users_settings[chat_id]["place"]}
–†–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞ -> {users_settings[chat_id]["radius"]}
–û—Ç—Å–ª–µ–∂–∏–≤–∞—é—Ç—å—Å—è –ª–∏ –Ω–æ–≤—ã–µ –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏—è -> {"–î–∞" if users_settings[chat_id]["tracking"] else "–ù–µ—Ç"}
–ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è —à–∏—Ä–æ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è -> {users_settings[chat_id]["latitude"]}
–ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è –¥–æ–ª–≥–æ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è -> {users_settings[chat_id]["longitude"]}

    """)


@bot.message_handler(commands=["setplace"])
def setplace(message):
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    chat_id = message.chat.id
    bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ (–≥–æ—Ä–æ–¥, –ø–æ—Å–µ–ª–æ–∫, –¥–µ—Ä–µ–≤–Ω—è –∏ —Ç.–ø.).")
    bot.register_next_step_handler(message, get_users_coords)
    

@bot.message_handler(commands=["setradius"])
def setradius(message):
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–¥–∏—É—Å–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    chat_id = message.chat.id
    bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ä–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞ –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏—è –≤ –∫–∏–ª–æ–º–µ—Ç—Ä–∞—Ö (20.001 –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ)")
    bot.register_next_step_handler(message, get_search_radius)


@bot.message_handler(commands=["fetch"])
def fetch(message):
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∑–∞ —Å–∫–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–Ω–µ–π –∏—Å–∫–∞—Ç—å –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏—è 
    chat_id = message.chat.id
    bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∑–∞ —Å–∫–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–Ω–µ–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏—è (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ 27)")
    bot.register_next_step_handler(message, get_last_earthquakes)


@bot.message_handler(commands=["track"])
def track(message):
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏–π
    chat_id = message.chat.id
    global users_settings
    if chat_id in users_settings:
        if users_settings[chat_id]["tracking"]:
            bot.send_message(chat_id, "–í—ã —É–∂–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç–µ –Ω–æ–≤—ã–µ –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏—è!")
            return None
    users_settings[chat_id]["tracking"] = True
    bot.send_message(chat_id, "–¢–µ–ø–µ—Ä—å –Ω–æ–≤—ã–µ –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏—è –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –í–∞–º!")
    while users_settings[chat_id]["tracking"]:
        new_earthquakes = track_new_earthquakes(users_settings[chat_id]["latitude"], users_settings[chat_id]["longitude"], users_settings[chat_id]["radius"], users_settings[chat_id]["tracking"])
        bot.send_message(chat_id, "–ù–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ!")
        for earthquake in new_earthquakes:
            send_eq_data(message, earthquake)


@bot.message_handler(commands=["untrack"])
def untrack(message):
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫–∞–Ω—á–∏–≤–∞–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏–π
    chat_id = message.chat.id
    global users_settings
    if chat_id in users_settings:
        if not users_settings[chat_id]["tracking"]:
            bot.send_message(chat_id, "–í—ã –Ω–µ –Ω–æ–≤—ã–µ –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏—è!")
            return None
        users_settings[chat_id]["tracking"] = False
    bot.send_message(chat_id, "–ü–æ—Å–ª–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–±—ã—Ç–∏—è –≤—ã –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏—è!")


@bot.message_handler(content_types="text")
def func_allocator(message):
    # –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∞—è –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ –∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—Å—Ç–∞, –≤—ã–∑—ã–≤–∞–µ—Ç –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é. –¢–∞–∫ –∏ –Ω–∞–∑—ã–≤–∞–µ—Ç—å—Å—è, "—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—å —Ñ—É–Ω–∫—Ü–∏–π"
    match message.text:
        case "üìç –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ":
            setplace(message)
        case "‚≠ï –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞":
            setradius(message)
        case "üåé –ù–∞–π—Ç–∏ –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏—è":
            fetch(message)
        case "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ":
            info(message)
        case "üîé –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏—è":
            track(message)
        case "‚ùå –ù–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏—è":
            untrack(message)
        case "‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è":
            settings(message)
        case _:
            bot.send_message(chat_id, "–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã!")


def bot_loop():
    # –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª –±–æ—Ç–∞
    try:
        bot.polling(none_stop=True)
    except KeyboardInterrupt:
        exit()
    except:
        print("–û—à–∏–±–∫–∞ –±—ã–ª–∞ –ø–æ–¥–∞–≤–ª–µ–Ω–∞!")
        bot_loop()


if __name__ == "__main__":
    bot_loop()